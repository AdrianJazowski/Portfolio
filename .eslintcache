[{"C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\templates\\MainTemplate.js":"3","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\globalStyles\\GlobalStyles.js":"4","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\components\\navigation\\Navigation.js":"5","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\views\\about\\AboutMe.js":"6","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\views\\contact\\Contact.js":"7","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\views\\home\\Home.js":"8","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\views\\projects\\Projects.js":"9","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\components\\navigation\\NavigationStyles.js":"10","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\globalStyles\\mainTheme.js":"11","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\context\\index.js":"12","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\views\\about\\AboutMeStyles.js":"13","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\views\\home\\HomeStyles.js":"14","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\views\\contact\\ContactStyles.js":"15","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\components\\filters\\FiltrByProjectCategory.js":"16","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\components\\jumbotron\\CustomJumbotron.js":"17","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\components\\jumbotron\\CustomJumbotronStyles.js":"18","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\components\\footer\\Footer.js":"19","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\components\\footer\\FooterStyles.js":"20","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\views\\projects\\ProjectsStyles.js":"21","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\components\\filters\\FiltrByProjectCategoryStyles.js":"22","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\data\\projectsData.js":"23"},{"size":184,"mtime":1608910489996,"results":"24","hashOfConfig":"25"},{"size":2637,"mtime":1612619949214,"results":"26","hashOfConfig":"25"},{"size":523,"mtime":1608916362956,"results":"27","hashOfConfig":"25"},{"size":480,"mtime":1612623792272,"results":"28","hashOfConfig":"25"},{"size":1663,"mtime":1612617081617,"results":"29","hashOfConfig":"25"},{"size":3401,"mtime":1612693980438,"results":"30","hashOfConfig":"25"},{"size":3406,"mtime":1612694974556,"results":"31","hashOfConfig":"25"},{"size":1814,"mtime":1612622680998,"results":"32","hashOfConfig":"25"},{"size":2398,"mtime":1612561568376,"results":"33","hashOfConfig":"25"},{"size":2335,"mtime":1612617257178,"results":"34","hashOfConfig":"25"},{"size":48,"mtime":1608915291005,"results":"35","hashOfConfig":"25"},{"size":139,"mtime":1608981114906,"results":"36","hashOfConfig":"25"},{"size":2127,"mtime":1612622883742,"results":"37","hashOfConfig":"25"},{"size":1678,"mtime":1612622236134,"results":"38","hashOfConfig":"25"},{"size":1324,"mtime":1612695390916,"results":"39","hashOfConfig":"25"},{"size":1604,"mtime":1612620289741,"results":"40","hashOfConfig":"25"},{"size":313,"mtime":1612298945180,"results":"41","hashOfConfig":"25"},{"size":331,"mtime":1612298953280,"results":"42","hashOfConfig":"25"},{"size":1253,"mtime":1612616382568,"results":"43","hashOfConfig":"25"},{"size":820,"mtime":1612298925884,"results":"44","hashOfConfig":"25"},{"size":2672,"mtime":1612618234883,"results":"45","hashOfConfig":"25"},{"size":466,"mtime":1612620749987,"results":"46","hashOfConfig":"25"},{"size":2787,"mtime":1612616205163,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1v0hfh4",{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\index.js",[],["102","103"],"C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\App.js",["104","105","106","107"],"/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport PortfolioContext from \"./context\";\nimport MainTemplate from \"./templates/MainTemplate\";\nimport Home from \"./views/home/Home\";\nimport { projectsData } from \"./data/projectsData\";\n\nconst App = () => {\n  const [projects, setProjects] = useState([...projectsData]);\n  const [selectedProjects, setSelectedProjects] = useState([...projectsData]);\n  const [navIconToggle, setNavIconToggle] = useState(false);\n  const [dropdown, setDropdown] = useState(false);\n  const [dropdownMenuToggle, setDropdownMenuToggle] = useState(false);\n  const [projectCategoryFilter, setProjectCategoryFilter] = useState(\"all\");\n\n  const handleProjectCategory = (e) => {\n    setProjectCategoryFilter(e.target.value);\n  };\n\n  const toggleIsFlipped = (projectId) => {\n    const flippedProjects = selectedProjects.map((project) => {\n      if (project.id === projectId) {\n        project.isFlipped = !project.isFlipped;\n      }\n      return project;\n    });\n\n    setSelectedProjects([...flippedProjects]);\n  };\n\n  const FiltrByProjectCategory = () => {\n    let tempCategory = [...projects];\n    if (projectCategoryFilter !== \"all\") {\n      tempCategory = tempCategory.filter((category) => {\n        return category.typeProject === projectCategoryFilter;\n      });\n    }\n    setSelectedProjects([...tempCategory]);\n  };\n\n  useEffect(() => {\n    FiltrByProjectCategory();\n  }, [projectCategoryFilter]);\n\n  const handleNavIconToggle = () => setNavIconToggle(!navIconToggle);\n  const handleCloseMobileMenu = () => setNavIconToggle(false);\n  const handleDropdownMenuToggle = () => setDropdownMenuToggle(false);\n\n  const onMouseEnter = () => {\n    if (window.innerWidth < 960) {\n      setDropdown(false);\n    } else {\n      setDropdown(true);\n    }\n  };\n  const onMouseLeave = () => {\n    if (window.innerWidth < 960) {\n      setDropdown(false);\n    } else {\n      setDropdown(false);\n    }\n  };\n\n  return (\n    <BrowserRouter>\n      <PortfolioContext.Provider\n        value={{\n          handleNavIconToggle,\n          navIconToggle,\n          handleCloseMobileMenu,\n          dropdown,\n          handleDropdownMenuToggle,\n          dropdownMenuToggle,\n          setDropdown,\n          onMouseEnter,\n          onMouseLeave,\n          projects,\n          projectCategoryFilter,\n          handleProjectCategory,\n          selectedProjects,\n          toggleIsFlipped,\n        }}\n      >\n        <MainTemplate>\n          <Home />\n        </MainTemplate>\n      </PortfolioContext.Provider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\templates\\MainTemplate.js",[],"C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\globalStyles\\GlobalStyles.js",[],"C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\components\\navigation\\Navigation.js",["108"],"/** @format */\r\n\r\nimport React, { useContext } from \"react\";\r\nimport {\r\n  BrandInNav,\r\n  CustomNav,\r\n  NavMenuIcon,\r\n  NavMenuUl,\r\n  NavMenuLi,\r\n  LinkInNav,\r\n} from \"./NavigationStyles\";\r\nimport { GiHamburgerMenu, GiCrossedSwords } from \"react-icons/gi\";\r\nimport PortfolioContext from \"../../context\";\r\nimport AboutMe from \"../../views/about/AboutMe\";\r\n\r\nconst Navigation = () => {\r\n  const value = useContext(PortfolioContext);\r\n  const {\r\n    handleNavIconToggle,\r\n    navIconToggle,\r\n    handleCloseMobileMenu,\r\n    onMouseEnter,\r\n    onMouseLeave,\r\n  } = value;\r\n  return (\r\n    <>\r\n      <CustomNav>\r\n        <BrandInNav>Adrian Jazowski</BrandInNav>\r\n        <NavMenuIcon onClick={handleNavIconToggle}>\r\n          {navIconToggle ? (\r\n            <GiCrossedSwords style={{ color: \"white\" }} />\r\n          ) : (\r\n            <GiHamburgerMenu style={{ color: \"white\" }} />\r\n          )}\r\n        </NavMenuIcon>\r\n\r\n        <NavMenuUl navIconToggle={navIconToggle}>\r\n          <NavMenuLi>\r\n            <LinkInNav onClick={handleCloseMobileMenu}>Strona główna</LinkInNav>\r\n          </NavMenuLi>\r\n\r\n          <NavMenuLi>\r\n            <LinkInNav href=\"#aboutMe\" onClick={handleCloseMobileMenu}>\r\n              O mnie\r\n            </LinkInNav>\r\n          </NavMenuLi>\r\n          <NavMenuLi onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\r\n            <LinkInNav onClick={handleCloseMobileMenu}>Projekty</LinkInNav>\r\n          </NavMenuLi>\r\n          <NavMenuLi>\r\n            <LinkInNav onClick={handleCloseMobileMenu}>Kontakt</LinkInNav>\r\n          </NavMenuLi>\r\n        </NavMenuUl>\r\n      </CustomNav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\views\\about\\AboutMe.js",["109"],"C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\views\\contact\\Contact.js",["110"],"C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\views\\home\\Home.js",[],"C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\views\\projects\\Projects.js",["111","112"],"/** @format */\r\n\r\nimport React, { useContext, useState } from \"react\";\r\nimport FiltrByProjectCategory from \"../../components/filters/FiltrByProjectCategory\";\r\nimport PortfolioContext from \"../../context\";\r\nimport {\r\n  ProjectCardDeck,\r\n  CardImg,\r\n  CardIcons,\r\n  Cardwrapper,\r\n  CardInner,\r\n  FrontCard,\r\n  BackCard,\r\n  CardContent,\r\n  CardHeader,\r\n  CardBody,\r\n  ProjectPageWrapper,\r\n} from \"./ProjectsStyles\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\nimport Flip from \"react-reveal/Flip\";\r\n\r\nconst Projects = () => {\r\n  const value = useContext(PortfolioContext);\r\n  const { selectedProjects, toggleIsFlipped } = value;\r\n\r\n  return (\r\n    <>\r\n      <ProjectPageWrapper>\r\n        <FiltrByProjectCategory />\r\n        <ProjectCardDeck>\r\n          {selectedProjects.map((project) => {\r\n            const {\r\n              projectName,\r\n              projectImg,\r\n              procjetTitle,\r\n              gitLink,\r\n              projectIcons,\r\n              isFlipped,\r\n              id,\r\n            } = project;\r\n            return (\r\n              <Flip left>\r\n                <Cardwrapper>\r\n                  <CardInner\r\n                    onClick={() => toggleIsFlipped(id)}\r\n                    isFlipped={isFlipped}\r\n                  >\r\n                    <FrontCard>\r\n                      <h2>{projectName}</h2>\r\n                    </FrontCard>\r\n                    <BackCard>\r\n                      <CardContent>\r\n                        <CardHeader>\r\n                          <CardImg src={projectImg} alt={projectName} />\r\n                          <h2>{projectName}</h2>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                          <h3>{procjetTitle}</h3>\r\n                        </CardBody>\r\n                        <CardIcons>\r\n                          {projectIcons.map((icon) => {\r\n                            return icon;\r\n                          })}\r\n                          <a href={gitLink} target=\"_blank\">\r\n                            <AiFillGithub />\r\n                          </a>\r\n                        </CardIcons>\r\n                      </CardContent>\r\n                    </BackCard>\r\n                  </CardInner>\r\n                </Cardwrapper>\r\n              </Flip>\r\n            );\r\n          })}\r\n        </ProjectCardDeck>\r\n      </ProjectPageWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\components\\navigation\\NavigationStyles.js",[],"C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\globalStyles\\mainTheme.js",[],"C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\context\\index.js",[],"C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\views\\about\\AboutMeStyles.js",["113","114"],"/** @format */\r\n\r\nimport { Card, Accordion } from \"react-bootstrap\";\r\nimport styled, { css } from \"styled-components\";\r\nimport cardReverse from \"../../assets/cardReverse.jpg\";\r\n\r\nexport const AboutMeWrapper = styled.div`\r\n  display: block;\r\n  height: 120vh;\r\n`;\r\nexport const LeftAbouteMeDiv = styled.div`\r\n  width: 80%;\r\n  height: 60vh;\r\n  display: flex;\r\n  margin: auto;\r\n`;\r\nexport const RightAbouteMeDiv = styled.div`\r\n  width: 80%;\r\n  height: 60vh;\r\n  display: flex;\r\n  margin: auto;\r\n`;\r\nexport const Skills = styled.div`\r\n  margin: auto;\r\n  text-align: center;\r\n  width: 100%;\r\n`;\r\nexport const AboutMeH2 = styled.h2`\r\n  color: #fff;\r\n  text-align: center;\r\n  padding-bottom: 24px;\r\n  margin: 10px;\r\n`;\r\n\r\nexport const SkillsIcons = styled.div`\r\n  font-size: 100px;\r\n  margin: 15px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  cursor: pointer;\r\n  svg {\r\n    color: rgba(15, 193, 107, 0.5);\r\n    &:hover {\r\n      color: rgba(15, 193, 107, 0.9);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ContainerForText = styled.div`\r\n  display: flex;\r\n  /* background-image: url(${cardReverse}); */\r\n  background-color: rgba(15, 193, 107, 0.1);\r\n  border-radius: 3em;\r\n  position: relative;\r\n  z-index: 1;\r\n  backdrop-filter: blur(5px);\r\n  border: solid 2px transparent;\r\n  background-clip: padding-box;\r\n  align-items: center;\r\n  text-align: center;\r\n  box-shadow: 0px 0px 15px 10px rgb(15 193 107 / 50%);\r\n  ${({ one }) =>\r\n    one &&\r\n    css`\r\n      grid-column: 1/2;\r\n      grid-row: 1/2;\r\n    `}\r\n  ${({ two }) =>\r\n    two &&\r\n    css`\r\n      grid-column: 2/3;\r\n      grid-row: 2/3;\r\n    `}\r\n    ${({ three }) =>\r\n    three &&\r\n    css`\r\n      grid-column: 1/2;\r\n      grid-row: 3/4;\r\n    `}\r\n    ${({ four }) =>\r\n    four &&\r\n    css`\r\n      grid-column: 2/3;\r\n      grid-row: 4/5;\r\n    `}\r\n`;\r\nexport const TextInGrid = styled.h5`\r\n  padding: 0 12px;\r\n  font-size: 18px;\r\n  color: white;\r\n`;\r\nexport const GridDiv = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: 25% 25% 25% 25%;\r\n`;\r\n\r\nexport const IconContainer = styled.div`\r\n  width: 20%;\r\n  p {\r\n    font-size: 22px;\r\n    color: #fff;\r\n  }\r\n`;\r\n","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\views\\home\\HomeStyles.js",[],"C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\views\\contact\\ContactStyles.js",[],"C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\components\\filters\\FiltrByProjectCategory.js",["115","116","117","118"],"/** @format */\r\nimport React, { useContext } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport PortfolioContext from \"../../context\";\r\nimport { StyledForm } from \"./FiltrByProjectCategoryStyles\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\n\r\nconst FiltrByProjectCategory = () => {\r\n  const value = useContext(PortfolioContext);\r\n  const { projects, handleProjectCategory } = value;\r\n\r\n  const categories = [\r\n    \"all\",\r\n    ...new Set(projects.map((category) => category.typeProject)),\r\n  ];\r\n\r\n  return (\r\n    <StyledForm component=\"fieldset\">\r\n      <RadioGroup\r\n        row\r\n        aria-label=\"projects\"\r\n        name=\"projecys\"\r\n        onChange={handleProjectCategory}\r\n      >\r\n        {categories.map((category) => {\r\n          return (\r\n            <>\r\n              <FormControlLabel\r\n                value={category}\r\n                control={<Radio />}\r\n                label={category}\r\n              />\r\n            </>\r\n          );\r\n        })}\r\n      </RadioGroup>\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport default FiltrByProjectCategory;\r\n\r\n{\r\n  /* <Form.Group>\r\n{categories.map((category) => {\r\n  return (\r\n    <>\r\n      <StyledForm\r\n        type=\"radio\"\r\n        label={category}\r\n        name=\"formHorizontalRadios\"\r\n        id={category}\r\n        onChange={handleProjectCategory}\r\n      />\r\n    </>\r\n  );\r\n})}\r\n</Form.Group> */\r\n}\r\n","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\components\\jumbotron\\CustomJumbotron.js",[],"C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\components\\jumbotron\\CustomJumbotronStyles.js",[],"C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\components\\footer\\Footer.js",["119","120"],"/** @format */\r\n\r\nimport React from \"react\";\r\nimport { AiFillLinkedin, AiFillGithub, AiFillMail } from \"react-icons/ai\";\r\nimport {\r\n  FooterH2,\r\n  FooterIcons,\r\n  FooterMedia,\r\n  FooterStyles,\r\n  FooterNavigation,\r\n  FooterLink,\r\n  FooterP,\r\n} from \"./FooterStyles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  const data = new Date().getFullYear();\r\n  return (\r\n    <FooterStyles>\r\n      <FooterMedia>\r\n        <FooterH2>Social Media</FooterH2>\r\n        <FooterIcons>\r\n          <a\r\n            href=\"https://www.linkedin.com/in/adrian-jazowski/\"\r\n            target=\"_blank\"\r\n          >\r\n            <AiFillLinkedin />\r\n          </a>\r\n          <a href=\"https://github.com/AdrianJazowski\" target=\"_blank\">\r\n            <AiFillGithub />\r\n          </a>\r\n          <Link>\r\n            <AiFillMail />\r\n          </Link>\r\n        </FooterIcons>\r\n      </FooterMedia>\r\n      <FooterNavigation>\r\n        <FooterLink>Strona główna</FooterLink>\r\n        <FooterLink> O mnie</FooterLink>\r\n        <FooterLink> Projekty</FooterLink>\r\n        <FooterLink>Kontakt</FooterLink>\r\n      </FooterNavigation>\r\n      <FooterP>Prawa autorskie © {data} | Adrian Jazowski</FooterP>\r\n    </FooterStyles>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\components\\footer\\FooterStyles.js",[],"C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\views\\projects\\ProjectsStyles.js",[],"C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\components\\filters\\FiltrByProjectCategoryStyles.js",["121"],"/** @format */\r\n\r\nimport styled from \"styled-components\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nexport const StyledForm = styled(FormControl)`\r\n  margin-top: 24px;\r\n  width: 100vw;\r\n  align-items: center;\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: white;\r\n  font-size: bold;\r\n  text-transform: uppercase;\r\n\r\n  span {\r\n    color: white;\r\n\r\n    span {\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n","C:\\Users\\Admin\\Desktop\\javaScript\\React zadania\\Portfolio\\portfolio\\src\\data\\projectsData.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":4,"column":25,"nodeType":"128","messageId":"129","endLine":4,"endColumn":30},{"ruleId":"126","severity":1,"message":"130","line":4,"column":32,"nodeType":"128","messageId":"129","endLine":4,"endColumn":38},{"ruleId":"126","severity":1,"message":"131","line":11,"column":20,"nodeType":"128","messageId":"129","endLine":11,"endColumn":31},{"ruleId":"132","severity":1,"message":"133","line":45,"column":6,"nodeType":"134","endLine":45,"endColumn":29,"suggestions":"135"},{"ruleId":"126","severity":1,"message":"136","line":14,"column":8,"nodeType":"128","messageId":"129","endLine":14,"endColumn":15},{"ruleId":"126","severity":1,"message":"137","line":17,"column":45,"nodeType":"128","messageId":"129","endLine":17,"endColumn":56},{"ruleId":"126","severity":1,"message":"138","line":26,"column":9,"nodeType":"128","messageId":"129","endLine":26,"endColumn":18},{"ruleId":"126","severity":1,"message":"139","line":3,"column":29,"nodeType":"128","messageId":"129","endLine":3,"endColumn":37},{"ruleId":"140","severity":1,"message":"141","line":64,"column":45,"nodeType":"142","endLine":64,"endColumn":60},{"ruleId":"126","severity":1,"message":"143","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":14},{"ruleId":"126","severity":1,"message":"144","line":3,"column":16,"nodeType":"128","messageId":"129","endLine":3,"endColumn":25},{"ruleId":"126","severity":1,"message":"145","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":14},{"ruleId":"126","severity":1,"message":"146","line":9,"column":8,"nodeType":"128","messageId":"129","endLine":9,"endColumn":19},{"ruleId":"126","severity":1,"message":"147","line":10,"column":8,"nodeType":"128","messageId":"129","endLine":10,"endColumn":17},{"ruleId":"148","severity":1,"message":"149","line":47,"column":1,"nodeType":"150","messageId":"151","endLine":63,"endColumn":2},{"ruleId":"140","severity":1,"message":"141","line":25,"column":13,"nodeType":"142","endLine":25,"endColumn":28},{"ruleId":"140","severity":1,"message":"141","line":29,"column":55,"nodeType":"142","endLine":29,"endColumn":70},{"ruleId":"126","severity":1,"message":"145","line":4,"column":10,"nodeType":"128","messageId":"129","endLine":4,"endColumn":14},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'setProjects' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'FiltrByProjectCategory'. Either include it or remove the dependency array.","ArrayExpression",["154"],"'AboutMe' is defined but never used.","'DiGitBranch' is defined but never used.","'sendEmail' is assigned a value but never used.","'useState' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Card' is defined but never used.","'Accordion' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},"Update the dependencies array to be: [FiltrByProjectCategory, projectCategoryFilter]",{"range":"157","text":"158"},[1483,1506],"[FiltrByProjectCategory, projectCategoryFilter]"]